version: "3.7"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    environment:
      - HTTPS_METHOD=redirect
      - NGINX_CLIENT_MAX_BODY_SIZE=50m
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - public
  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=orhancangurel@gmail.com
      - NGINX_PROXY_CONTAINER=nginx-proxy 
      - HTTPS_METHOD=redirect
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    networks:
      - public
     
  frontend:
    image: ghcr.io/utsc-cscc09-programming-on-the-web/choresprint-frontend
    container_name: frontend
    restart: always
    expose:
      - 80
    environment:
      - VIRTUAL_HOST=www.choresprint.app
      - LETSENCRYPT_HOST=www.choresprint.app
      - HTTPS_METHOD=redirect
    env_file:
      - .env.frontend
    networks:
      - public
    depends_on:
      - backend
  backend:
    image: ghcr.io/utsc-cscc09-programming-on-the-web/choresprint-backend
    container_name: backend
    restart: always
    expose:
      - 4000
    environment:
      - VIRTUAL_HOST=api.choresprint.app
      - LETSENCRYPT_HOST=api.choresprint.app
      - HTTPS_METHOD=redirect
    env_file:
      - .env.backend
    networks:
      - backend
      - public
    depends_on:
      - postgres
      - redis
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - backend
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      - backend
  ai-worker:
    image: ghcr.io/utsc-cscc09-programming-on-the-web/choresprint-backend
    command: node dist/workers/aiVerificationWorker.js
    env_file:
      - .env.backend
    networks:
      - backend
      - public
    depends_on:
      - redis
      - postgres

networks:
  public:
    driver: bridge
  backend:
    driver: bridge