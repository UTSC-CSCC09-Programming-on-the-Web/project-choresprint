// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  email          String       @unique
  name           String?
  avatarUrl      String?
  provider       String?      // e.g. "google"
  providerId     String?      // external OAuth ID

  userHouses     UserHouse[]  // join table for many-to-many
  chores         Chore[]      @relation("ChoreAssignee")
  createdHouses  House[]      @relation("HouseCreatedBy")
  createdAt      DateTime     @default(now())
}

model House {
  id            Int          @id @default(autoincrement())
  name          String
  createdBy     User         @relation("HouseCreatedBy", fields: [createdById], references: [id])
  createdById   Int

  userHouses    UserHouse[]  // join table for many-to-many
  chores        Chore[]
  createdAt     DateTime     @default(now())
}

model UserHouse {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int

  house    House  @relation(fields: [houseId], references: [id])
  houseId  Int

  points   Int    @default(0)
  joinedAt DateTime @default(now())

  @@id([userId, houseId])
}

model Chore {
  id            Int       @id @default(autoincrement())
  title         String
  description   String?
  dueDate       DateTime?
  isCompleted   Boolean   @default(false)

  assignedTo    User?     @relation("ChoreAssignee", fields: [assignedToId], references: [id])
  assignedToId  Int?

  house         House     @relation(fields: [houseId], references: [id])
  houseId       Int

  photoUrl      String?   // for uploaded verification photo
  verified      Boolean   @default(false) // AI decision
  points        Int       @default(10)
  createdAt     DateTime  @default(now())
}
